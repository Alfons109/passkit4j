{"body":"# passkit4j [![Build Status](https://secure.travis-ci.org/ryantenney/passkit4j.png?branch=master)](https://travis-ci.org/ryantenney/passkit4j)\r\n\r\n## Apple Passbook library for Java\r\n\r\n - Fluent API\r\n - Stream-oriented\r\n\r\n### Usage\r\n\r\nCreate a Pass Type ID in the [iOS Provisioning Portal](https://developer.apple.com/ios/manage/passtypeids/index.action) (if you haven't done so already), import the resulting `pass.cer` file into Keychain, then export it as a `.p12` file. Download the [Apple WWDR certificate](http://developer.apple.com/certificationauthority/AppleWWDRCA.cer).\r\n\r\nIn the code, create a `PassSignerImpl` object with these certificates:\r\n\r\n```java\r\nPassSigner signer = PassSignerImpl.builder()\r\n\t.keystore(new FileInputStream(\"/path/to/certificate.p12\"), \"password\")\r\n\t.intermediateCertificate(new FileInputStream(\"/path/to/AppleWWDRCA.cer\"))\r\n\t.build();\r\n\r\nPass pass = new Pass()\r\n\t.passTypeIdentifier(\"pass.com.bouldercoffeeco.storeCard\")\r\n\t.serialNumber(\"1a2b3c\")\r\n\t.teamIdentifier(\"cafed00d\");\r\n\t// ... for a full example see src/test/com/ryantenney/passkit4j/StoreCardExample.java\r\n\r\nPassSerializer.writePkPassArchive(pass, signer, outputStream);\r\n```\r\n\r\n### Maven\r\n\r\nThe first release, v1.0.0 dropped on November 26th, 2012\r\n\r\n```xml\r\n<dependency>\r\n\t<groupId>com.ryantenney.passkit4j</groupId>\r\n\t<artifactId>passkit4j</artifactId>\r\n\t<version>1.0.0</version>\r\n</dependency>\r\n```\r\n\r\n---\r\n\r\n### License\r\n\r\nCopyright (c) 2012 Ryan Tenney\r\n\r\n[![Rochester Made](http://rochestermade.com/media/images/rochester-made-light-on-dark.png)](http://rochestermade.com)\r\n","tagline":"Apple Passbook library for Java","note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","name":"passkit4j"}